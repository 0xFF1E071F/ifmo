ORG     000
RET:    WORD    ?
        NOP             ;Ячейка для отладочной точки останова
        BR INT          ;Переход к обработке прерывания
        
ORG     120   
INT:    MOV SAVEA       ;Сохранение аккумулятора и регистра С
        ROL
        MOV SAVEC
CHECK2: TSF 2           ;Опрос флага ВУ-2
        BR CHECK3       ;Если сброшен, то перейти к опросу флага ВУ-3
        BR READY2       ;Иначе перейти к работе с ВУ-2
CHECK3: TSF 3           ;Опрос флага ВУ-3
        BR READY1       ;Если сброшен, то перейти к работе с ВУ-1
        BR READY3       ;Иначе перейти к работе с ВУ-3
READY2: CLA
        IN 2
        CMA
        INC             ;Берем значение из РД ВУ-2 со знаком минус
        ADD X
        JSR CHECKX      ;Проверка на соответствие ОДЗ и запись х в память
        CLF 2           
        BR RSTOR        ;Переход к восстановлению аккумулятора и С
READY3: CLA
        SUB X
        SUB X
        SUB X
        SUB X
        SUB X
        SUB X           ;Берем произведение 6 и х со знаком минус
        SUB SVN         ;Вычитаем 7
        OUT 3           ;Выводим результат на ВУ-3
        CLF 3           ;Сброс флага ВУ-3
        BR RSTOR        ;Переход к восстановлению аккумулятора и С
READY1: CLF 1           ;Сброс флага ВУ-1
RSTOR:  CLA         
        ADD SAVEC       ;Восстановть регистр С
        ROR
        CLA
        CMA
        AND SAVEA       ;Восстановить аккумулятор не затрагивая С
        NOP             ;Ячейка для отладочной точки останова
        EI              ;Разрешить прерывания
        BR (RET)        ;Вернуться в основную программу

ORG 008
X:      WORD    0000    ;Ячейка для записи переменной х
ORG 010
TWO:    WORD    0002    
SAVEA:  WORD    ?
SAVEC:  WORD    ?
SVN:    WORD    0007
AHB:    WORD    0014    ;Модуль максимального значения х
ALB:    WORD    0015    ;Модуль минимального значения х

ORG     020             ;Основная программа
BEGIN:  EI              ;Разрешить прерывания
        CLA
        ADD X
LOOP:   SUB TWO         ;Уменьшаем х на два 
        JSR CHECKX      ;Проверка на соответствие ОДЗ и запись х в память
        BR LOOP

                        ;Подпрограмма для проверки и записи х в память
CHECKX: WORD    ?       ;Адрес возврата
        SUB AHB         
        BPL CORR        ;Если х > верхней границы
        ADD AHB
        ADD ALB         
        BMI CORR        ;Или x < нижней границы то приравнять х верхней границе
        SUB ALB
        BR MOVING       ;В противном случае сразу записать х в память
CORR:   CLA
        ADD AHB
MOVING: MOV X
        BR (CHECKX)    